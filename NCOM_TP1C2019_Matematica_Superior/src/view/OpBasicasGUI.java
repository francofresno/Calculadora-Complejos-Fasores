/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.placeholder.PlaceHolder;
import model.ComplejoBinomica;
import model.ComplejoPolar;
import model.FlagSyntax;

/**
 *
 * @author Franco
 */
public class OpBasicasGUI extends javax.swing.JFrame {

    /**
     * Creates new form opBasicas
     */
    public OpBasicasGUI() {
        initComponents();
        PlaceHolder holder1 = new PlaceHolder(jTextFieldComplejo1, "Ingrese un complejo (x,y) o [p;o]");
        PlaceHolder holder2 = new PlaceHolder(jTextFieldComplejo2, "Ingrese un complejo (x,y) o [p;o]");           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSideMenu = new javax.swing.JPanel();
        jPanelAppTitle = new javax.swing.JPanel();
        appTitle = new java.awt.Label();
        jPanelAppTitle1 = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();
        jButtonOpBasicas = new javax.swing.JButton();
        jButtonOpAvanzadas = new javax.swing.JButton();
        jButtonFasores = new javax.swing.JButton();
        jTextFieldComplejo1 = new javax.swing.JTextField();
        jTextFieldComplejo2 = new javax.swing.JTextField();
        jLabelOperator = new javax.swing.JLabel();
        jButtonRestar = new javax.swing.JButton();
        jButtonProducto = new javax.swing.JButton();
        jButtonCociente = new javax.swing.JButton();
        jLabelResultado = new javax.swing.JLabel();
        jButtonTransformarResultado = new javax.swing.JButton();
        jButtonSuma = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Operaciones basicas con Números Complejos");
        setResizable(false);

        jPanelSideMenu.setBackground(new java.awt.Color(25, 33, 43));
        jPanelSideMenu.setToolTipText("");

        jPanelAppTitle.setBackground(new java.awt.Color(38, 47, 61));
        jPanelAppTitle.setToolTipText("");

        appTitle.setAlignment(java.awt.Label.CENTER);
        appTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        appTitle.setForeground(new java.awt.Color(225, 232, 240));
        appTitle.setText("NCOM APP");

        javax.swing.GroupLayout jPanelAppTitleLayout = new javax.swing.GroupLayout(jPanelAppTitle);
        jPanelAppTitle.setLayout(jPanelAppTitleLayout);
        jPanelAppTitleLayout.setHorizontalGroup(
            jPanelAppTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelAppTitleLayout.setVerticalGroup(
            jPanelAppTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAppTitleLayout.createSequentialGroup()
                .addComponent(appTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelAppTitle1.setBackground(new java.awt.Color(38, 47, 61));
        jPanelAppTitle1.setToolTipText("");

        jButtonVolver.setBackground(new java.awt.Color(38, 47, 61));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(225, 232, 240));
        jButtonVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Back Icon.png"))); // NOI18N
        jButtonVolver.setText("Volver");
        jButtonVolver.setBorder(null);
        jButtonVolver.setBorderPainted(false);
        jButtonVolver.setContentAreaFilled(false);
        jButtonVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAppTitle1Layout = new javax.swing.GroupLayout(jPanelAppTitle1);
        jPanelAppTitle1.setLayout(jPanelAppTitle1Layout);
        jPanelAppTitle1Layout.setHorizontalGroup(
            jPanelAppTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAppTitle1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelAppTitle1Layout.setVerticalGroup(
            jPanelAppTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAppTitle1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonOpBasicas.setBackground(new java.awt.Color(25, 33, 43));
        jButtonOpBasicas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonOpBasicas.setForeground(new java.awt.Color(225, 232, 240));
        jButtonOpBasicas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Plus Icon.png"))); // NOI18N
        jButtonOpBasicas.setText("   Operaciones Básicas");
        jButtonOpBasicas.setBorder(null);
        jButtonOpBasicas.setBorderPainted(false);
        jButtonOpBasicas.setContentAreaFilled(false);
        jButtonOpBasicas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonOpBasicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpBasicasActionPerformed(evt);
            }
        });

        jButtonOpAvanzadas.setBackground(new java.awt.Color(25, 33, 43));
        jButtonOpAvanzadas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonOpAvanzadas.setForeground(new java.awt.Color(225, 232, 240));
        jButtonOpAvanzadas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Square Root Icon.png"))); // NOI18N
        jButtonOpAvanzadas.setText(" Operaciones Avanzadas");
        jButtonOpAvanzadas.setBorder(null);
        jButtonOpAvanzadas.setBorderPainted(false);
        jButtonOpAvanzadas.setContentAreaFilled(false);
        jButtonOpAvanzadas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonOpAvanzadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpAvanzadasActionPerformed(evt);
            }
        });

        jButtonFasores.setBackground(new java.awt.Color(25, 33, 43));
        jButtonFasores.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonFasores.setForeground(new java.awt.Color(225, 232, 240));
        jButtonFasores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Fasores Icon.png"))); // NOI18N
        jButtonFasores.setText("   Sumatoria de Fasores");
        jButtonFasores.setBorder(null);
        jButtonFasores.setBorderPainted(false);
        jButtonFasores.setContentAreaFilled(false);
        jButtonFasores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFasores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFasoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSideMenuLayout = new javax.swing.GroupLayout(jPanelSideMenu);
        jPanelSideMenu.setLayout(jPanelSideMenuLayout);
        jPanelSideMenuLayout.setHorizontalGroup(
            jPanelSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAppTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelAppTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSideMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOpAvanzadas, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonFasores))
                .addContainerGap())
            .addGroup(jPanelSideMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonOpBasicas)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSideMenuLayout.setVerticalGroup(
            jPanelSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSideMenuLayout.createSequentialGroup()
                .addComponent(jPanelAppTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jButtonOpBasicas)
                .addGap(18, 18, 18)
                .addComponent(jButtonOpAvanzadas)
                .addGap(18, 18, 18)
                .addComponent(jButtonFasores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelAppTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextFieldComplejo1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jTextFieldComplejo1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldComplejo1.setToolTipText("");
        jTextFieldComplejo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldComplejo1ActionPerformed(evt);
            }
        });

        jTextFieldComplejo2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jTextFieldComplejo2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldComplejo2.setToolTipText("");
        jTextFieldComplejo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldComplejo2ActionPerformed(evt);
            }
        });

        jLabelOperator.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButtonRestar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButtonRestar.setText("RESTA");
        jButtonRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestarActionPerformed(evt);
            }
        });

        jButtonProducto.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButtonProducto.setText("PRODUCTO");
        jButtonProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProductoActionPerformed(evt);
            }
        });

        jButtonCociente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButtonCociente.setText("COCIENTE");
        jButtonCociente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCocienteActionPerformed(evt);
            }
        });

        jLabelResultado.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelResultado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonTransformarResultado.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButtonTransformarResultado.setText("Transformar resultado");
        jButtonTransformarResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransformarResultadoActionPerformed(evt);
            }
        });

        jButtonSuma.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButtonSuma.setText("SUMA");
        jButtonSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSumaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelSideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldComplejo1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jLabelOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldComplejo2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 26, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonTransformarResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonRestar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonCociente, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldComplejo1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldComplejo2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRestar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCociente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButtonTransformarResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.dispose();
        new MainGUI().setVisible(true);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonOpBasicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpBasicasActionPerformed
        this.dispose();
        new OpBasicasGUI().setVisible(true);
    }//GEN-LAST:event_jButtonOpBasicasActionPerformed

    private void jButtonOpAvanzadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpAvanzadasActionPerformed
        this.dispose();
        new OpAvanzadasGUI().setVisible(true);
    }//GEN-LAST:event_jButtonOpAvanzadasActionPerformed

    private void jButtonFasoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFasoresActionPerformed
        this.dispose();
        new FasoresGUI().setVisible(true);
    }//GEN-LAST:event_jButtonFasoresActionPerformed

    private void jTextFieldComplejo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldComplejo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldComplejo2ActionPerformed

    private void jTextFieldComplejo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldComplejo1ActionPerformed

    }//GEN-LAST:event_jTextFieldComplejo1ActionPerformed
 
    private void jButtonRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestarActionPerformed
        jLabelOperator.setText("-");
        String num1,num2,resultado;
        num1 = jTextFieldComplejo1.getText();
        num2 = jTextFieldComplejo2.getText();
        FlagSyntax flagSyntax = new FlagSyntax();
        switch (num1.charAt(0)){
            case '(' : {
                switch (num2.charAt(0)){
                    case '(' :{
                        ComplejoBinomica a,b,resta;            
                        a=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        b=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            resta = a.resta(b);  
                            resultado = resultadoBinomica(resta);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    case '[' : {
                        ComplejoBinomica a,resta,b=new ComplejoBinomica();
                        ComplejoPolar bp;
                        a=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        b=b.polarABinomica(bp);
                        if (flagSyntax.flag==1){
                            resta = a.resta(b);  
                            resultado = resultadoBinomica(resta);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;
            }
        case '[':{
                  switch(num2.charAt(0)){
                  case '(' :{
                        ComplejoPolar ap,restaPolar= new ComplejoPolar();
                        ComplejoBinomica ab = new ComplejoBinomica(),bb,restaBin;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ab=ab.polarABinomica(ap);
                            restaBin = ab.suma(bb);  
                            restaPolar = restaPolar.binomicaAPolar(restaBin);
                            resultado = resultadoPolar(restaPolar);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    case '[' : {
                        ComplejoPolar ap,bp,restaPolar= new ComplejoPolar();
                        ComplejoBinomica ab = new ComplejoBinomica(),bb= new ComplejoBinomica(),restaBin;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ab=ab.polarABinomica(ap);
                            bb=bb.polarABinomica(bp);
                            restaBin = ab.suma(bb);  
                            restaPolar = restaPolar.binomicaAPolar(restaBin);
                            resultado = resultadoPolar(restaPolar);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;    
        }
        default : jLabelResultado.setText("SYNTAX ERROR");
        }
    }//GEN-LAST:event_jButtonRestarActionPerformed

    private void jButtonProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProductoActionPerformed
        jLabelOperator.setText("*");
        String num1,num2,resultado;
        num1 = jTextFieldComplejo1.getText();
        num2 = jTextFieldComplejo2.getText();
        FlagSyntax flagSyntax = new FlagSyntax();
        switch (num1.charAt(0)){
            case '(' : {
                switch (num2.charAt(0)){
                    case '(' :{
                        ComplejoBinomica ab,bb,productoBinomico=new ComplejoBinomica();
                        ComplejoPolar ap=new ComplejoPolar(),bp=new ComplejoPolar(),productoPolar;
                        ab=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ap=ap.binomicaAPolar(ab);
                            bp=bp.binomicaAPolar(bb);
                            productoPolar = ap.cociente(bp);
                            productoBinomico = productoBinomico.polarABinomica(productoPolar);
                            resultado = resultadoBinomica(productoBinomico);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    case '[' : {
                        ComplejoBinomica ab,productoBinomico=new ComplejoBinomica();
                        ComplejoPolar ap=new ComplejoPolar(),bp,productoPolar;
                        ab=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ap=ap.binomicaAPolar(ab);
                            productoPolar = ap.cociente(bp);
                            productoBinomico = productoBinomico.polarABinomica(productoPolar);
                            resultado = resultadoBinomica(productoBinomico);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;
            }
        case '[':{
                  switch(num2.charAt(0)){
                  case '(' :{
                        ComplejoPolar ap,bp=new ComplejoPolar(),producto;
                        ComplejoBinomica bb;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            bp=bp.binomicaAPolar(bb);
                            producto = ap.cociente(bp);  
                            resultado = resultadoPolar(producto);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    case '[' : {
                        ComplejoPolar a,b,producto;            
                        a=getNumeroPolarDeTexto(num1,flagSyntax);
                        b=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            producto = a.cociente(b);  
                            resultado = resultadoPolar(producto);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;    
        }
        default : jLabelResultado.setText("SYNTAX ERROR");
        }
    }//GEN-LAST:event_jButtonProductoActionPerformed

    private void jButtonCocienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCocienteActionPerformed
        jLabelOperator.setText("/");
        String num1,num2,resultado;
        num1 = jTextFieldComplejo1.getText();
        num2 = jTextFieldComplejo2.getText();
        FlagSyntax flagSyntax = new FlagSyntax();
        switch (num1.charAt(0)){
            case '(' : {
                switch (num2.charAt(0)){
                    case '(' :{
                        ComplejoBinomica ab,bb,cocienteBinomico=new ComplejoBinomica();
                        ComplejoPolar ap=new ComplejoPolar(),bp=new ComplejoPolar(),cocientePolar;
                        ab=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ap=ap.binomicaAPolar(ab);
                            bp=bp.binomicaAPolar(bb);
                            cocientePolar = ap.cociente(bp);
                            cocienteBinomico = cocienteBinomico.polarABinomica(cocientePolar);
                            resultado = resultadoBinomica(cocienteBinomico);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    case '[' : {
                        ComplejoBinomica ab,cocienteBinomico=new ComplejoBinomica();
                        ComplejoPolar ap=new ComplejoPolar(),bp,cocientePolar;
                        ab=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ap=ap.binomicaAPolar(ab);
                            cocientePolar = ap.cociente(bp);
                            cocienteBinomico = cocienteBinomico.polarABinomica(cocientePolar);
                            resultado = resultadoBinomica(cocienteBinomico);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;
            }
        case '[':{
                  switch(num2.charAt(0)){
                  case '(' :{
                        ComplejoPolar ap,bp=new ComplejoPolar(),cociente;
                        ComplejoBinomica bb;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            bp=bp.binomicaAPolar(bb);
                            cociente = ap.cociente(bp);  
                            resultado = resultadoPolar(cociente);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    case '[' : {
                        ComplejoPolar a,b,cociente;            
                        a=getNumeroPolarDeTexto(num1,flagSyntax);
                        b=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            cociente = a.cociente(b);  
                            resultado = resultadoPolar(cociente);
                             jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;    
        }
        default : jLabelResultado.setText("SYNTAX ERROR");
        }         
    }//GEN-LAST:event_jButtonCocienteActionPerformed

    private void jButtonTransformarResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransformarResultadoActionPerformed
       String resultado=jLabelResultado.getText();
       FlagSyntax flagSyntax = new FlagSyntax();
       switch(resultado.charAt(0)){
           case '(':  { 
               ComplejoBinomica old = getNumeroBinomicoDeTexto(resultado,flagSyntax);
               ComplejoPolar nuevo = new ComplejoPolar();
               nuevo= nuevo.binomicaAPolar(old);
               resultado = resultadoPolar(nuevo); 
               jLabelResultado.setText(resultado);
               break;
           }
           case '[' : {
               ComplejoPolar old = getNumeroPolarDeTexto (resultado,flagSyntax);
               ComplejoBinomica nuevo = new ComplejoBinomica ();
               nuevo = nuevo.polarABinomica(old);
               resultado = resultadoBinomica(nuevo);
               jLabelResultado.setText(resultado);
               break;
           }
       }        
    }//GEN-LAST:event_jButtonTransformarResultadoActionPerformed

    private void jButtonSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSumaActionPerformed
        String num1,num2,resultado;
        jLabelOperator.setText("+");
        num1 = jTextFieldComplejo1.getText();
        num2 = jTextFieldComplejo2.getText();
        FlagSyntax flagSyntax = new FlagSyntax();
        switch (num1.charAt(0)){
            case '(' : {
                switch (num2.charAt(0)){
                    case '(' :{
                        ComplejoBinomica a,b,suma;            
                        a=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        b=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            suma = a.suma(b);  
                            resultado = resultadoBinomica(suma);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                         break;
                    }
                    case '[' : {
                        ComplejoBinomica a,suma,b=new ComplejoBinomica();
                        ComplejoPolar bp;
                        a=getNumeroBinomicoDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        b=b.polarABinomica(bp);
                        if (flagSyntax.flag==1){
                            suma = a.suma(b);  
                            resultado = resultadoBinomica(suma);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;
            }
        case '[':{
                  switch(num2.charAt(0)){
                  case '(' :{
                        ComplejoPolar ap,sumaPolar= new ComplejoPolar();
                        ComplejoBinomica ab = new ComplejoBinomica(),bb,sumaBin;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bb=getNumeroBinomicoDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ab=ab.polarABinomica(ap);
                            sumaBin = ab.suma(bb);  
                            sumaPolar = sumaPolar.binomicaAPolar(sumaBin);
                            resultado = resultadoPolar(sumaPolar);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    case '[' : {
                        ComplejoPolar ap,bp,sumaPolar= new ComplejoPolar();
                        ComplejoBinomica ab = new ComplejoBinomica(),bb= new ComplejoBinomica(),sumaBin;            
                        ap=getNumeroPolarDeTexto(num1,flagSyntax);
                        bp=getNumeroPolarDeTexto(num2,flagSyntax);
                        if (flagSyntax.flag==1){
                            ab=ab.polarABinomica(ap);
                            bb=bb.polarABinomica(bp);
                            sumaBin = ab.suma(bb);  
                            sumaPolar = sumaPolar.binomicaAPolar(sumaBin);
                            resultado = resultadoPolar(sumaPolar);
                            jLabelResultado.setText(resultado);
                        }else{
                            jLabelResultado.setText("SYNTAX ERROR");
                        }
                        break;
                    }
                    default : {
                        jLabelResultado.setText("SYNTAX ERROR");
                        break;
                    }
                }
                break;    
        }
        default : jLabelResultado.setText("SYNTAX ERROR");
        }
    }//GEN-LAST:event_jButtonSumaActionPerformed

    private ComplejoPolar getNumeroPolarDeTexto (String textfield,FlagSyntax flagSyntax){
        ComplejoPolar numeroComplejo=new ComplejoPolar();
        String a="0",b="0";
        int comaPos=0;
        try{
            comaPos= textfield.indexOf(';');
            a=textfield.substring(1,comaPos);
            b=textfield.substring(comaPos+1, textfield.length()-1);
        }catch(StringIndexOutOfBoundsException  e){
            flagSyntax.flag=0;
        }        
        if (textfield.charAt(textfield.length()-1)!=']'){
            flagSyntax.flag=0;
        }
        try{
            numeroComplejo.modulo = Double.parseDouble(a);
            numeroComplejo.argumento = Double.parseDouble(b);
        }catch(NumberFormatException e){
            flagSyntax.flag=0;
        }
        return numeroComplejo;
    } 
    
    private ComplejoBinomica getNumeroBinomicoDeTexto (String textfield,FlagSyntax flagSyntax){
        ComplejoBinomica numeroComplejo=new ComplejoBinomica();
        String a="0",b="0";
        int comaPos=0;
        try{
            comaPos= textfield.indexOf(',');
            a=textfield.substring(1,comaPos);
            b=textfield.substring(comaPos+1, textfield.length()-1);
        }catch(StringIndexOutOfBoundsException  e){
            flagSyntax.flag=0;
        }        
        if (textfield.charAt(textfield.length()-1)!=')'){
           
        }
        try{
            numeroComplejo.componenteReal = Double.parseDouble(a);             
            numeroComplejo.componenteImaginaria = Double.parseDouble(b);
        }catch(NumberFormatException e){
             flagSyntax.flag=0;
        }
        return numeroComplejo;
    }
   
    private String resultadoBinomica (ComplejoBinomica resultado){
        String res="(",num;
        Double real = resultado.componenteReal,imaginaria=resultado.componenteImaginaria;
        num = real.toString();
        res=res.concat(num);
        res=res.concat(",");
        num=imaginaria.toString();
        res=res.concat(num);
        res=res.concat(")");
        return res;
    }
    
     private String resultadoPolar (ComplejoPolar resultado){
        String res="[",num;
        Double mod = resultado.modulo,arg=resultado.argumento;
        num = mod.toString();
        res=res.concat(num);
        res=res.concat(";");
        num=arg.toString();
        res=res.concat(num);
        res=res.concat("]");
        return res;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpBasicasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpBasicasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpBasicasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpBasicasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpBasicasGUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label appTitle;
    public javax.swing.JButton jButtonCociente;
    private javax.swing.JButton jButtonFasores;
    private javax.swing.JButton jButtonOpAvanzadas;
    private javax.swing.JButton jButtonOpBasicas;
    public javax.swing.JButton jButtonProducto;
    public javax.swing.JButton jButtonRestar;
    public javax.swing.JButton jButtonSuma;
    public javax.swing.JButton jButtonTransformarResultado;
    private javax.swing.JButton jButtonVolver;
    public javax.swing.JLabel jLabelOperator;
    public javax.swing.JLabel jLabelResultado;
    private javax.swing.JPanel jPanelAppTitle;
    private javax.swing.JPanel jPanelAppTitle1;
    private javax.swing.JPanel jPanelSideMenu;
    public javax.swing.JTextField jTextFieldComplejo1;
    public javax.swing.JTextField jTextFieldComplejo2;
    // End of variables declaration//GEN-END:variables
}
